// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

/// Responsive manager
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
/// @link http://sass-guidelin.es/#breakpoint-manager Sass Guidelines - Breakpoint Manager
@mixin respond-to($breakpoint) {
  $query: map-get($breakpoints, $breakpoint);
  
  @if not $query {
    @error 'No value found for `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
  }

  @media #{if(type-of($query) == 'string', unquote($query), inspect($query))} {
    @content;
  }
}


@mixin flexy($direction: column, $justify: space-between) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
}

@mixin down-arrow {
  width: 0;
  height: 0;
  border-top: .5em solid $brand-color;
  border-left: .5em solid transparent;
  border-right: .5em solid transparent;
}

@mixin dropdown {
  border-bottom: .4px solid $mid-grey;
  padding: .5em;
  color: $light-grey;
  width: 80%;
}

@mixin transition($time) {
  transition: all $time linear;
}

@mixin center-flex {
  display: flex;
  justify-content: space-around;
  align-items: center;
}

@mixin gallery-item($url, $ext: jpg) {
  background: url('../img/' + $url + "." + $ext);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: bottom left;
  width: 90%;
  height: 35vh;
  @include center-flex;
  @include transition(.4s);

  @media screen and (min-width: $media-mid-small) {
      background-position: center center;
      width: 50%;
      height: 100vh / 6;

      &:nth-child(2), &:last-of-type {
        width: 100%;
        @media screen and (min-width: $media-large) {
          width: 50%;
        }
      }
  }

  @media screen and (min-width: $media-large) {
    width: 24%;
    height: 50vh;
    flex-wrap: wrap;
  }
}